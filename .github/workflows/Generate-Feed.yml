name: Update Products Feed

on:
  schedule:
    - cron: '0 0 * * *'   # يوميًا عند منتصف الليل UTC
  workflow_dispatch:

permissions:
  contents: write          # الحد الأدنى المطلوب للدفع

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # قيّد التشغيل على main

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false     # سنمرر GITHUB_TOKEN صراحة عند push

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'         # تثبيت نسخة محددة لثبات البيئة

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests bs4 lxml

      - name: Run feed generator
        env:
          FEED_URL: ${{ secrets.FEED_URL }}  # اختياري: مصدر EasyOrders إن لم يتوفر feed.xml
        run: |
          set -e
          python generate_feed.py
          # تحقق من وجود ملف الفيد الناتج
          test -s products-feed.xml || (echo "products-feed.xml not found or empty" && exit 1)

      - name: Build product pages
        run: |
          set -e
          python build_pages.py
          test -d product || (echo "No product pages generated" && exit 1)

      - name: Commit and push updated feed and pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          # إعداد هوية git محلياً فقط
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          # إضافة الملفات الناتجة
          git add products-feed.xml product

          # إنشاء الالتزام فقط عند وجود تغييرات
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "[skip ci] Auto-update feed and pages"

          # دفع آمن باستخدام GITHUB_TOKEN إلى نفس الفرع مع إعادة محاولات
          for i in 1 2 3; do
            git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}" "HEAD:${{ github.ref_name }}" && break || \
            (echo "Push failed (attempt $i). Retrying in 5s..." && sleep 5)
          done
